## 函数式编程
   通过把大段代码拆成函数，一层层的函数调用，就可以把复杂的任务分解成简单的任务，这种分解称之为面向过程的程序设计。
   函数就是面向过程的程序设计的基本单元
   
   函数式编程就是一种抽象度很高的编程范式，特点是允许把函数本身作为参数传入另一个函数，还允许返回一个函数。Python允许使用变量，不是纯函数式编程语言。


## 高阶函数
   - 变量可以指向函数，即可以函数本身可以赋值给变量
   - 函数名是指向函数的变量
   - 一个函数接受另一个函数作为参数，这种函数称为高阶函数，例如：
     def add(x,y,f):
        return f(x)+f(y)
   函数式编程就是指这种高度抽象的编程范式  
   - map/reduce：
      - map()接收两个参数，一个是函数，一个是Iterable，map将传入的函数依次作用到序列的每一个元素，把结果作为Iterator返回
      - reduce()接收两个参数，一个函数一个序列，第一个函数接收序列中的两个元素，计算结果和下一个元素做累积计算
   - filter:
      filter()函数用于过滤序列，接收一个函数和一个序列，filter()把传入的函数依次作用于每个元素，根据返回值true或false决定保还是丢弃该元素
      filter()函数返回的是一个Iterator，需要使用list()函数获得所有结果并返回list
